
<project name="common" xmlns:ivy="antlib:org.apache.ivy.ant">

	<ivy:settings file="${common.dir}/ivysettings.xml" />
	<property file="${common.dir}/common.properties"/>

	
	<property name="ivy.jar.dir" value="${user.home}/.ivy2/jars" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />


    <path id="lib.path.id">
        <fileset dir="${lib.dir}" />
    </path>
	
    <path id="run.path.id">
        <path refid="lib.path.id" />
        <path location="${classes.dir}" />
    </path>

    
	<!-- setup ivy default configuration with some custom info
	<property name="ivy.local.default.root" value="${repository.dir}/local"/>
	<property name="ivy.shared.default.root" value="${repository.dir}/shared"/>
	-->
	
    <!-- 
	================================= 
	targets
	================================= 
	-->
  
	
	<target name="ivy-new-version" unless="ivy.new.revision">
		<property name="module.version.prefix" value="${module.version.target}-dev-b" />
    	<!-- asks to ivy an available version number -->
		<ivy:info file="${ivy.file}" />
    	<ivy:buildnumber 
    		organisation="${ivy.organisation}" module="${ivy.module}" 
    		revision="${module.version.prefix}" defaultBuildNumber="1" revSep=""/>
	</target>

    <target name="local-version">
		<tstamp>
			<format property="now" pattern="yyyyMMddHHmmss"/>
		</tstamp>
        <property name="ivy.new.revision" value="${module.version.target}-local-${now}"/>
    </target>
	
	<target name="version" depends="ivy-new-version">
    	<!-- create version file in classpath for later inclusion in jar -->
        <mkdir dir="${classes.dir}"/>
		<echo message="version=${ivy.new.revision}" file="${classes.dir}/${ant.project.name}.properties" append="false" />
		<!-- load generated version properties file -->
        <property file="${classes.dir}/${ant.project.name}.properties" />
    </target>

	<target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>

	<target name="resolve" depends="clean-lib" description="--> resolve and retrieve dependencies with ivy">
        <mkdir dir="${lib.dir}"/>
    	<ivy:retrieve pattern="${lib.dir}/[conf]/[artifact].[ext]" />
    </target>
	
    <target name="compile" depends="resolve" description="--> compile the project">
        <mkdir dir="${classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="lib.path.id" debug="true" includeAntRuntime="false"/>
    </target>
	
	
	<!-- Copy *.xml or *.properties from ${resources.dir} to ${web.classes.dir} -->
	<target name="copy-resources" description="copy Java resources like xml and properties files">
		<copy todir="${classes.dir}">
			<fileset dir="${src.main.rsc}" />
		</copy>
	</target>
	
	<!-- PUBLISH -->
    <target name="jar" depends="version, compile, copy-resources" description="--> make a jar file for this project">
        <jar destfile="${jar.file}">
            <fileset dir="${classes.dir}" />
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Version" value="${version}" />
            </manifest>
        </jar>
    </target>

    <target name="publish-local" depends="local-version, jar" description="--> publish this project in the local ivy repository">
		<ivy:publish artifactspattern="${build.dir}/[artifact].[ext]" 
			resolver="local"
			pubrevision="${version}"
			pubdate="${now}"
			status="integration"
			forcedeliver="true"/>
        <echo message="project ${ant.project.name} published locally with version ${version}" />
    </target>

	<target name="publish" depends="clean-build, jar" description="--> publish this project in the ivy repository">
    	<ivy:publish artifactspattern="${build.dir}/[artifact].[ext]" 
			resolver="modules"
			pubrevision="${version}" 
			status="release"/>
		<echo message="project ${ant.project.name} released with version ${version}" />
    </target>
	
	<target name="sub-publish" depends="buildlist" description="compile, jar and publish all projects in the right order">
		<subant target="publish" buildpathref="build-path" />
	</target>
	
	<!-- CLEAN -->
	<target name="clean-local"  
		description="--> cleans the local repository for the current module">
		<ivy:info file="${ivy.file}" />
	   <delete dir="${ivy.local.default.root}/${ivy.organisation}/${ivy.module}"/>
	</target>

    <target name="clean-lib" description="--> clean the project libraries directory (dependencies)">
        <delete includeemptydirs="true" dir="${lib.dir}"/>
    </target>

    <target name="clean-build" description="--> clean the project built files">
        <delete includeemptydirs="true" dir="${build.dir}"/>
    </target>

    <target name="clean" depends="clean-build, clean-lib" description="--> clean the project" />
	
	<target name="clean-all" depends="buildlist" 
		description="clean all projects">
		<subant target="clean" buildpathref="build-path" />
		<delete dir="repository"/>
		<ivy:cleancache />
	</target>
  
</project>
